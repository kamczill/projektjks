{"version":3,"file":"cache.js","names":["MAX_CACHE_SIZE","TTL","Number","MAX_SAFE_INTEGER","cacheDir","Cache","constructor","name","store","fsStore","cacheDirectory","cache","cacheBase","path","join","process","cwd","directory","init","fs","ensureDirSync","configs","max","ttl","options","caches","map","manager","caching","multiCaching","get","key","Promise","resolve","Error","err","res","undefined","set","value","args","Map","getCacheInstance","shouldHardCacheData","isDevelop","env","NODE_ENV","pluginOptions","develop","hardCacheData","getState","gatsbyApi","setHardCachedData","hardCache","getHardCachedData","data","getHardCachedNodes","allWpNodes","shouldUseHardDataCache","length","staticFileCacheDirectory","staticFileDirectory","restoreStaticDirectory","copy","copyStaticDirectory","setHardCachedNodes","helpers","allNodes","getNodes","filter","node","internal","owner","clearHardCache","rimraf","clearHardCachedNodes","hardCachedNodes","setPersistentCache","getGatsbyApi","all","getPersistentCache","cachedData","hardCachedData","restoreHardCachedNodes","loggerTypeCounts","reporter","type","endsWith","createContentDigest","actions","createMediaItemNode","parentName","contentDigest","typeSettingsCache","typeSettings","getTypeSettingsByType","remoteNode","beforeChangeNode","receivedRemoteNode","actionType","fetchGraphql","buildTypeName","wpStore","createNode","Object","entries","forEach","typeName","count","dispatch","logger","createActivityTimer","incrementActivityTimer","by","action","stopActivityTimer","createdNodeIds","id"],"sources":["../../src/utils/cache.ts"],"sourcesContent":["import { GatsbyHelpers } from \"~/utils/gatsby-types\"\nimport manager from \"cache-manager\"\nimport fs from \"fs-extra\"\nimport fsStore from \"cache-manager-fs-hash\"\nimport path from \"path\"\nimport rimraf from \"rimraf\"\n\nimport store from \"~/store\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\n\nimport fetchGraphql from \"~/utils/fetch-graphql\"\n\nimport {\n  getTypeSettingsByType,\n  buildTypeName,\n} from \"~/steps/create-schema-customization/helpers\"\n\nimport { createMediaItemNode } from \"~/steps/source-nodes/fetch-nodes/fetch-referenced-media-items\"\nimport type { Node } from \"gatsby\"\n\nconst MAX_CACHE_SIZE = 250\nconst TTL = Number.MAX_SAFE_INTEGER\nconst cacheDir = `.wordpress-cache/caches`\n\ntype Store = manager.StoreConfig[\"store\"]\n\ninterface ICacheOptions {\n  name?: string\n  store?: Store\n}\nexport default class Cache {\n  private store: Store\n  private name: string\n  private cacheDirectory: string\n  private cache: manager.MultiCache\n  constructor({ name = `db`, store = fsStore }: ICacheOptions = {}) {\n    this.name = name\n    this.store = store\n    this.cacheDirectory = cacheDir\n  }\n\n  get cacheBase(): string {\n    return path.join(process.cwd(), this.cacheDirectory)\n  }\n\n  get directory(): string {\n    return `${this.cacheBase}/${this.name}`\n  }\n\n  init(): Cache {\n    fs.ensureDirSync(this.directory)\n\n    const configs: Array<manager.StoreConfig> = [\n      {\n        store: `memory`,\n        max: MAX_CACHE_SIZE,\n        ttl: TTL,\n      },\n      {\n        store: this.store,\n        ttl: TTL,\n        options: {\n          path: this.directory,\n          ttl: TTL,\n        },\n      },\n    ]\n\n    const caches = configs.map(cache => manager.caching(cache))\n\n    this.cache = manager.multiCaching(caches)\n\n    return this\n  }\n\n  get(key: string): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.get(key, (err, res) => {\n        resolve(err ? undefined : res)\n      })\n    })\n  }\n\n  set(key: string, value: unknown, args = { ttl: TTL }): Promise<unknown> {\n    return new Promise(resolve => {\n      if (!this.cache) {\n        throw new Error(\n          `Cache wasn't initialised yet, please run the init method first`\n        )\n      }\n      this.cache.set(key, value, args, err => {\n        resolve(err ? undefined : value)\n      })\n    })\n  }\n}\n\nconst caches = new Map()\n\nexport const getCacheInstance = (name: string): Cache => {\n  let cache = caches.get(name)\n  if (!cache) {\n    cache = new Cache({ name }).init()\n    caches.set(name, cache)\n  }\n  return cache\n}\n\nexport const shouldHardCacheData = (): boolean => {\n  const isDevelop = process.env.NODE_ENV === `development`\n\n  if (!isDevelop) {\n    return false\n  }\n\n  const {\n    pluginOptions: {\n      develop: { hardCacheData },\n    },\n  } = store.getState().gatsbyApi\n\n  return hardCacheData\n}\n\nexport const setHardCachedData = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<unknown> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  await hardCache.set(key, value)\n}\n\nexport const getHardCachedData = async <T = Node>({\n  key,\n}: {\n  key: string\n}): Promise<T> => {\n  if (!shouldHardCacheData()) {\n    return null\n  }\n\n  const hardCache = getCacheInstance(`wordpress-data`)\n\n  const data = await hardCache.get(key)\n\n  return data as T\n}\n\nexport const getHardCachedNodes = async (): Promise<null | Array<Node>> => {\n  const allWpNodes = await getHardCachedData<Array<Node>>({ key: `allWpNodes` })\n\n  const shouldUseHardDataCache = allWpNodes?.length\n\n  if (shouldUseHardDataCache) {\n    return allWpNodes\n  }\n\n  return null\n}\n\nconst staticFileCacheDirectory = `${process.cwd()}/.wordpress-cache/caches/public/static`\nconst staticFileDirectory = `${process.cwd()}/public/static`\n\nexport const restoreStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileCacheDirectory, staticFileDirectory)\n}\n\nconst copyStaticDirectory = async (): Promise<void> => {\n  await fs.copy(staticFileDirectory, staticFileCacheDirectory)\n}\n\nexport const setHardCachedNodes = async ({\n  helpers,\n}: {\n  helpers: GatsbyHelpers\n}): Promise<void> => {\n  if (!shouldHardCacheData()) {\n    return\n  }\n\n  const allNodes = await helpers.getNodes()\n\n  const allWpNodes = allNodes.filter(\n    (node: Node) => node.internal.owner === `gatsby-source-wordpress`\n  )\n\n  await setHardCachedData({\n    key: `allWpNodes`,\n    value: allWpNodes,\n  })\n\n  // if we're hard caching data,\n  // that means any inline html images paths will be baked into\n  // the processed hard cached nodes.\n  // so we need to copy the static directory\n  await copyStaticDirectory()\n}\n\nexport const clearHardCache = async (): Promise<void> => {\n  await new Promise(resolve => {\n    const directory = new Cache().cacheBase\n\n    rimraf(directory, resolve)\n  })\n}\n\nexport const clearHardCachedNodes = async (): Promise<void> => {\n  const hardCachedNodes = !!(await getHardCachedNodes())\n\n  if (hardCachedNodes) {\n    await setHardCachedData({\n      key: `allWpNodes`,\n      value: null,\n    })\n  }\n}\n\n// persistent cache\nexport const setPersistentCache = async ({\n  key,\n  value,\n}: {\n  key: string\n  value: unknown\n}): Promise<void> => {\n  const { helpers } = getGatsbyApi()\n\n  await Promise.all([\n    // set Gatsby cache\n    helpers.cache.set(key, value),\n    // and hard cache\n    setHardCachedData({ key, value }),\n  ])\n}\n\nexport const getPersistentCache = async ({\n  key,\n}: {\n  key: string\n}): Promise<unknown> => {\n  const { helpers } = getGatsbyApi()\n\n  const cachedData = await helpers.cache.get(key)\n\n  if (cachedData) {\n    return cachedData\n  }\n\n  const hardCachedData = await getHardCachedData({ key })\n\n  return hardCachedData\n}\n\nexport const restoreHardCachedNodes = async ({\n  hardCachedNodes,\n}: {\n  hardCachedNodes: Array<Node>\n}): Promise<Array<string>> => {\n  const loggerTypeCounts = {}\n\n  const { helpers, pluginOptions } = getGatsbyApi()\n  const { reporter } = helpers\n\n  // restore nodes\n  await Promise.all(\n    hardCachedNodes.map(async node => {\n      if (!loggerTypeCounts[node.internal.type]) {\n        loggerTypeCounts[node.internal.type] = 0\n      }\n\n      loggerTypeCounts[node.internal.type] += 1\n\n      // media items are created in a special way\n      if (node.internal.type.endsWith(`MediaItem`)) {\n        delete node.internal\n\n        const { createContentDigest, actions } = helpers\n\n        return createMediaItemNode({\n          node,\n          helpers,\n          createContentDigest,\n          actions,\n          parentName: `Hard cache restoration`,\n          // referencedMediaItemNodeIds,\n          // allMediaItemNodes = [],\n        })\n      }\n\n      node.internal = {\n        contentDigest: node.internal.contentDigest,\n        type: node.internal.type,\n      } as Node[\"internal\"]\n\n      const typeSettingsCache = {}\n\n      const typeSettings =\n        // TODO: extend node type for wordpress?\n        typeSettingsCache[node.type as string] ??\n        getTypeSettingsByType({\n          name: node.type,\n        })\n\n      let remoteNode = node\n\n      if (\n        typeSettings.beforeChangeNode &&\n        typeof typeSettings.beforeChangeNode === `function`\n      ) {\n        const {\n          // additionalNodeIds: receivedAdditionalNodeIds,\n          remoteNode: receivedRemoteNode,\n          // cancelUpdate: receivedCancelUpdate,\n        } =\n          (await typeSettings.beforeChangeNode({\n            actionType: `CREATE_ALL`,\n            remoteNode,\n            actions: helpers.actions,\n            helpers,\n            fetchGraphql,\n            typeSettings,\n            buildTypeName,\n            type: node.type,\n            wpStore: store,\n          })) || {}\n\n        if (receivedRemoteNode) {\n          remoteNode = receivedRemoteNode\n        }\n      }\n\n      // restore each node\n      // TODO: update gatsby types\n      await helpers.actions.createNode(remoteNode)\n\n      return null\n    })\n  )\n\n  Object.entries(loggerTypeCounts).forEach(([typeName, count]) => {\n    store.dispatch.logger.createActivityTimer({\n      typeName,\n      pluginOptions,\n      reporter,\n    })\n\n    store.dispatch.logger.incrementActivityTimer({\n      typeName,\n      by: count,\n      action: `restored`,\n    })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName,\n      action: `restored`,\n    })\n  })\n\n  // restore static directory\n  await restoreStaticDirectory()\n\n  // build createdNodeIds id array to be cached 1 level above\n  const createdNodeIds = hardCachedNodes.map(node => node.id)\n\n  return createdNodeIds\n}\n"],"mappings":"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"}