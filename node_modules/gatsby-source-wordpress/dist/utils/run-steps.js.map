{"version":3,"file":"run-steps.js","names":["runSteps","steps","helpers","pluginOptions","apiName","step","timeBuildSteps","debug","timeStep","includes","name","activity","reporter","activityTimer","formatLogMessage","useVerboseStyle","start","Array","isArray","end","e","sharedError","invokeAndCleanupLeftoverPreviewCallbacks","status","context","error","console","panic","id","CODES","SourcePluginCodeError","sourceMessage","findApiName","initialApiNameString","potentialApiNames","split","isGatsbyNodeLifecycleSupported","require","join","Error","runApiSteps"],"sources":["../../src/utils/run-steps.ts"],"sourcesContent":["import { GatsbyNodeApiHelpers, GatsbyReporter } from \"./gatsby-types\"\nimport { IPluginOptions } from \"~/models/gatsby-api\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport { invokeAndCleanupLeftoverPreviewCallbacks } from \"../steps/preview/cleanup\"\nimport { CODES } from \"./report\"\n\nexport type Step = (\n  helpers?: GatsbyNodeApiHelpers,\n  pluginOptions?: IPluginOptions\n) => Promise<void> | void\n\nexport type ActivityTimer = ReturnType<GatsbyReporter[\"activityTimer\"]>\n\nconst runSteps = async (\n  steps: Array<Step>,\n  helpers: GatsbyNodeApiHelpers,\n  pluginOptions: IPluginOptions,\n  apiName: string\n): Promise<void> => {\n  for (const step of steps) {\n    try {\n      const { timeBuildSteps } = pluginOptions?.debug ?? {}\n      const timeStep =\n        typeof timeBuildSteps === `boolean`\n          ? timeBuildSteps\n          : timeBuildSteps?.includes(step.name) ||\n            timeBuildSteps?.includes(apiName)\n\n      let activity: ActivityTimer\n\n      if (timeStep) {\n        activity = helpers.reporter.activityTimer(\n          formatLogMessage(`step -${!apiName ? `-` : ``}> ${step.name}`, {\n            useVerboseStyle: true,\n          })\n        )\n        activity.start()\n      }\n\n      if (typeof step === `function`) {\n        await step(helpers, pluginOptions)\n      } else if (Array.isArray(step)) {\n        await runSteps(step, helpers, pluginOptions, apiName)\n      }\n\n      if (activity) {\n        activity.end()\n      }\n    } catch (e) {\n      const sharedError = `Encountered a critical error when running the ${\n        apiName ? `${apiName}.` : ``\n      }${step.name} build step.`\n\n      // on errors, invoke any preview callbacks to send news of this error back to the WP Preview window.\n      await invokeAndCleanupLeftoverPreviewCallbacks({\n        status: `GATSBY_PREVIEW_PROCESS_ERROR`,\n        context: sharedError,\n        error: e,\n      })\n\n      console.error(e)\n      helpers.reporter.panic({\n        id: CODES.SourcePluginCodeError,\n        context: {\n          sourceMessage: formatLogMessage(\n            `\\n\\n\\t${sharedError}\\n\\tSee above for more information.`,\n            { useVerboseStyle: true }\n          ),\n        },\n      })\n    }\n  }\n}\n\n/**\n * Takes in a pipe delimited string of Gatsby Node API names and returns the first supported API name as a string\n *\n * Example input: \"onPluginInit|unstable_onPluginInit\"\n * Example output: \"onPluginInit\"\n */\nconst findApiName = (initialApiNameString: string): string => {\n  if (!initialApiNameString.includes(`|`)) {\n    return initialApiNameString\n  }\n\n  const potentialApiNames = initialApiNameString.split(`|`)\n\n  try {\n    const { isGatsbyNodeLifecycleSupported } = require(`gatsby-plugin-utils`)\n\n    for (const apiName of potentialApiNames) {\n      if (isGatsbyNodeLifecycleSupported(apiName)) {\n        return apiName\n      }\n    }\n  } catch (e) {\n    console.error(\n      `Could not check if Gatsby supports node API's [${potentialApiNames.join(\n        `, `\n      )}]. Trying to use the first available API name (${potentialApiNames[0]})`\n    )\n\n    return potentialApiNames[0]\n  }\n\n  throw new Error(\n    `Couldn't find any supported Gatsby Node API's in ${initialApiNameString}`\n  )\n}\n\nconst runApiSteps =\n  (steps: Array<Step>, apiName: string) =>\n  async (\n    helpers: GatsbyNodeApiHelpers,\n    pluginOptions: IPluginOptions\n  ): Promise<void> =>\n    runSteps(steps, helpers, pluginOptions, apiName)\n\nexport { runSteps, runApiSteps, findApiName }\n"],"mappings":"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"}