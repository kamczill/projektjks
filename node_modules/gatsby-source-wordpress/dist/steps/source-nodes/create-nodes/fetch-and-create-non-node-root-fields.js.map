{"version":3,"file":"fetch-and-create-non-node-root-fields.js","names":["fetchAndCreateNonNodeRootFields","state","store","getState","remoteSchema","nonNodeQuery","gatsbyApi","helpers","pluginOptions","reporter","activity","activityTimer","formatLogMessage","start","data","fetchGraphql","query","errorContext","createdNodeIds","referencedMediaItemNodeIds","Set","type","schema","typePrefix","node","id","url","createRootNode","createNodeWithSideEffects","referencedMediaItemNodeIdsArray","newMediaItemIds","filter","getNode","MediaItem","lazyNodes","length","dispatch","logger","createActivityTimer","typeName","fetchReferencedMediaItemsAndCreateNodes","previouslyCachedNodeIds","getPersistentCache","key","CREATED_NODE_IDS","setPersistentCache","value","stopActivityTimer","end"],"sources":["../../../../src/steps/source-nodes/create-nodes/fetch-and-create-non-node-root-fields.js"],"sourcesContent":["import store from \"~/store\"\nimport fetchGraphql from \"~/utils/fetch-graphql\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport { createNodeWithSideEffects } from \"./create-nodes\"\nimport fetchReferencedMediaItemsAndCreateNodes from \"../fetch-nodes/fetch-referenced-media-items\"\nimport { CREATED_NODE_IDS } from \"~/constants\"\nimport { getPersistentCache, setPersistentCache } from \"~/utils/cache\"\n\nconst fetchAndCreateNonNodeRootFields = async () => {\n  const state = store.getState()\n\n  const {\n    remoteSchema: { nonNodeQuery },\n    gatsbyApi: { helpers, pluginOptions },\n  } = state\n\n  const { reporter } = helpers\n\n  const activity = reporter.activityTimer(formatLogMessage(`fetch root fields`))\n\n  activity.start()\n\n  const { data } = await fetchGraphql({\n    query: nonNodeQuery,\n    errorContext: `Error occurred while fetching non-Node root fields.`,\n  })\n\n  const createdNodeIds = []\n  // const totalSideEffectNodes = []\n  const referencedMediaItemNodeIds = new Set()\n\n  const type = pluginOptions.schema.typePrefix\n\n  const node = {\n    ...data,\n    id: `${pluginOptions.url}--rootfields`,\n    type,\n  }\n\n  const createRootNode = createNodeWithSideEffects({\n    node,\n    state,\n    referencedMediaItemNodeIds,\n    createdNodeIds,\n    type,\n    // totalSideEffectNodes,\n  })\n\n  createRootNode()\n\n  const referencedMediaItemNodeIdsArray = [...referencedMediaItemNodeIds]\n\n  const newMediaItemIds = referencedMediaItemNodeIdsArray.filter(\n    id => !helpers.getNode(id)\n  )\n\n  /**\n   * if we're not lazy fetching media items, we need to fetch them\n   * upfront here\n   */\n  if (!pluginOptions.type.MediaItem.lazyNodes && newMediaItemIds.length) {\n    store.dispatch.logger.createActivityTimer({\n      typeName: `MediaItems`,\n      pluginOptions,\n      reporter,\n    })\n\n    await fetchReferencedMediaItemsAndCreateNodes({\n      referencedMediaItemNodeIds: newMediaItemIds,\n    })\n\n    const previouslyCachedNodeIds = await getPersistentCache({\n      key: CREATED_NODE_IDS,\n    })\n\n    const createdNodeIds = [\n      ...new Set([\n        ...(previouslyCachedNodeIds || []),\n        ...referencedMediaItemNodeIdsArray,\n      ]),\n    ]\n\n    // save the node id's so we can touch them on the next build\n    // so that we don't have to refetch all nodes\n    await setPersistentCache({ key: CREATED_NODE_IDS, value: createdNodeIds })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName: `MediaItems`,\n    })\n  }\n\n  activity.end()\n}\n\nexport default fetchAndCreateNonNodeRootFields\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,+BAA+B,GAAG,YAAY;EAClD,MAAMC,KAAK,GAAGC,cAAA,CAAMC,QAAN,EAAd;;EAEA,MAAM;IACJC,YAAY,EAAE;MAAEC;IAAF,CADV;IAEJC,SAAS,EAAE;MAAEC,OAAF;MAAWC;IAAX;EAFP,IAGFP,KAHJ;EAKA,MAAM;IAAEQ;EAAF,IAAeF,OAArB;EAEA,MAAMG,QAAQ,GAAGD,QAAQ,CAACE,aAAT,CAAuB,IAAAC,kCAAA,EAAkB,mBAAlB,CAAvB,CAAjB;EAEAF,QAAQ,CAACG,KAAT;EAEA,MAAM;IAAEC;EAAF,IAAW,MAAM,IAAAC,qBAAA,EAAa;IAClCC,KAAK,EAAEX,YAD2B;IAElCY,YAAY,EAAG;EAFmB,CAAb,CAAvB;EAKA,MAAMC,cAAc,GAAG,EAAvB,CAnBkD,CAoBlD;;EACA,MAAMC,0BAA0B,GAAG,IAAIC,GAAJ,EAAnC;EAEA,MAAMC,IAAI,GAAGb,aAAa,CAACc,MAAd,CAAqBC,UAAlC;EAEA,MAAMC,IAAI,GAAG,EACX,GAAGV,IADQ;IAEXW,EAAE,EAAG,GAAEjB,aAAa,CAACkB,GAAI,cAFd;IAGXL;EAHW,CAAb;EAMA,MAAMM,cAAc,GAAG,IAAAC,sCAAA,EAA0B;IAC/CJ,IAD+C;IAE/CvB,KAF+C;IAG/CkB,0BAH+C;IAI/CD,cAJ+C;IAK/CG,IAL+C,CAM/C;;EAN+C,CAA1B,CAAvB;EASAM,cAAc;EAEd,MAAME,+BAA+B,GAAG,CAAC,GAAGV,0BAAJ,CAAxC;EAEA,MAAMW,eAAe,GAAGD,+BAA+B,CAACE,MAAhC,CACtBN,EAAE,IAAI,CAAClB,OAAO,CAACyB,OAAR,CAAgBP,EAAhB,CADe,CAAxB;EAIA;AACF;AACA;AACA;;EACE,IAAI,CAACjB,aAAa,CAACa,IAAd,CAAmBY,SAAnB,CAA6BC,SAA9B,IAA2CJ,eAAe,CAACK,MAA/D,EAAuE;IACrEjC,cAAA,CAAMkC,QAAN,CAAeC,MAAf,CAAsBC,mBAAtB,CAA0C;MACxCC,QAAQ,EAAG,YAD6B;MAExC/B,aAFwC;MAGxCC;IAHwC,CAA1C;;IAMA,MAAM,IAAA+B,kCAAA,EAAwC;MAC5CrB,0BAA0B,EAAEW;IADgB,CAAxC,CAAN;IAIA,MAAMW,uBAAuB,GAAG,MAAM,IAAAC,yBAAA,EAAmB;MACvDC,GAAG,EAAEC;IADkD,CAAnB,CAAtC;IAIA,MAAM1B,cAAc,GAAG,CACrB,GAAG,IAAIE,GAAJ,CAAQ,CACT,IAAIqB,uBAAuB,IAAI,EAA/B,CADS,EAET,GAAGZ,+BAFM,CAAR,CADkB,CAAvB,CAfqE,CAsBrE;IACA;;IACA,MAAM,IAAAgB,yBAAA,EAAmB;MAAEF,GAAG,EAAEC,2BAAP;MAAyBE,KAAK,EAAE5B;IAAhC,CAAnB,CAAN;;IAEAhB,cAAA,CAAMkC,QAAN,CAAeC,MAAf,CAAsBU,iBAAtB,CAAwC;MACtCR,QAAQ,EAAG;IAD2B,CAAxC;EAGD;;EAED7B,QAAQ,CAACsC,GAAT;AACD,CApFD;;eAsFehD,+B"}