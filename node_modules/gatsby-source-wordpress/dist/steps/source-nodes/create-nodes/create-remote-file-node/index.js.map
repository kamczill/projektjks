{"version":3,"file":"index.js","names":["fs","require","remoteFileDownloaderBarPromise","got","createContentDigest","path","isWebUri","Queue","readChunk","fileType","createFileNode","getRemoteFileExtension","getRemoteFileName","createFilePath","cacheId","url","bar","totalJobs","STALL_RETRY_LIMIT","process","env","GATSBY_STALL_RETRY_LIMIT","parseInt","STALL_TIMEOUT","GATSBY_STALL_TIMEOUT","CONNECTION_TIMEOUT","GATSBY_CONNECTION_TIMEOUT","queue","getQueue","limit","pushToQueue","id","merge","old","_","cb","concurrent","on","awaitingCreateRemoteFileNodePromise","doneQueueTimeout","setTimeout","done","task","node","processRemoteNode","e","requestRemoteNode","headers","tmpFilename","httpOpts","attempt","Promise","resolve","reject","timeout","handleTimeout","fsWriteStream","close","removeSync","processingCache","total","Error","resetTimeout","clearTimeout","responseStream","stream","send","createWriteStream","pipe","error","console","response","cache","createNode","parentNodeId","auth","httpHeaders","createNodeId","ext","name","pluginCacheDir","directory","cachedHeaders","get","etag","htaccess_pass","htaccess_user","b64e","digest","statusCode","set","buffer","sync","minimumBytes","filetype","filename","join","String","move","overwrite","remove","fileNode","internal","description","parent","pushTask","push","err","module","exports","getCache","reporter","pluginOptions","type","MediaItem","localFile","requestConcurrency","decodeURI","encodeURI","undefined","createProgress","start","fileDownloadPromise","then","tick"],"sources":["../../../../../src/steps/source-nodes/create-nodes/create-remote-file-node/index.js"],"sourcesContent":["import { b64e } from \"~/utils/string-encoding\"\nconst fs = require(`fs-extra`)\nconst { remoteFileDownloaderBarPromise } = require(`./progress-bar-promise`)\nconst got = require(`got`)\nconst { createContentDigest } = require(`gatsby-core-utils`)\nconst path = require(`path`)\nconst { isWebUri } = require(`valid-url`)\nconst Queue = require(`better-queue`)\nconst readChunk = require(`read-chunk`)\nconst fileType = require(`file-type`)\n\nconst { createFileNode } = require(`gatsby-source-filesystem/create-file-node`)\nconst {\n  getRemoteFileExtension,\n  getRemoteFileName,\n  createFilePath,\n} = require(`gatsby-source-filesystem/utils`)\nconst cacheId = url => `create-remote-file-node-${url}`\n\nlet bar\n// Keep track of the total number of jobs we push in the queue\nlet totalJobs = 0\n\n/********************\n * Type Definitions *\n ********************/\n\n/**\n * @typedef {GatsbyCache}\n * @see gatsby/packages/gatsby/utils/cache.js\n */\n\n/**\n * @typedef {Reporter}\n * @see gatsby/packages/gatsby-cli/lib/reporter.js\n */\n\n/**\n * @typedef {Auth}\n * @type {Object}\n * @property {String} htaccess_pass\n * @property {String} htaccess_user\n */\n\n/**\n * @typedef {CreateRemoteFileNodePayload}\n * @typedef {Object}\n * @description Create Remote File Node Payload\n *\n * @param  {String} options.url\n * @param  {GatsbyCache} options.cache\n * @param  {Function} options.createNode\n * @param  {Function} options.getCache\n * @param  {Auth} [options.auth]\n * @param  {Reporter} [options.reporter]\n */\n\nconst STALL_RETRY_LIMIT = process.env.GATSBY_STALL_RETRY_LIMIT\n  ? parseInt(process.env.GATSBY_STALL_RETRY_LIMIT, 10)\n  : 3\nconst STALL_TIMEOUT = process.env.GATSBY_STALL_TIMEOUT\n  ? parseInt(process.env.GATSBY_STALL_TIMEOUT, 10)\n  : 30000\n\nconst CONNECTION_TIMEOUT = process.env.GATSBY_CONNECTION_TIMEOUT\n  ? parseInt(process.env.GATSBY_CONNECTION_TIMEOUT, 10)\n  : 30000\n\n/********************\n * Queue Management *\n ********************/\n\n/**\n * Queue\n * Use the task's url as the id\n * When pushing a task with a similar id, prefer the original task\n * as it's already in the processing cache\n */\n\nlet queue = null\n\nconst getQueue = limit => {\n  if (!queue) {\n    queue = new Queue(pushToQueue, {\n      id: `url`,\n      merge: (old, _, cb) => cb(old),\n      concurrent: limit || 100,\n    })\n    // when the queue is empty we stop the progressbar\n    queue.on(`drain`, async () => {\n      if (awaitingCreateRemoteFileNodePromise) {\n        return\n      }\n\n      awaitingCreateRemoteFileNodePromise = true\n      await remoteFileDownloaderBarPromise\n      awaitingCreateRemoteFileNodePromise = false\n\n      if (bar) {\n        // this is to give us a little time to wait and see if there\n        // will be more jobs added with a break between\n        // sometimes the queue empties but then is recreated within 2 secs\n        doneQueueTimeout = setTimeout(() => {\n          bar.done()\n          totalJobs = 0\n        }, 2000)\n      }\n    })\n  }\n  return queue\n}\n\nlet doneQueueTimeout\n\nlet awaitingCreateRemoteFileNodePromise\n\n/**\n * @callback {Queue~queueCallback}\n * @param {*} error\n * @param {*} result\n */\n\n/**\n * pushToQueue\n * --\n * Handle tasks that are pushed in to the Queue\n *\n *\n * @param  {CreateRemoteFileNodePayload}          task\n * @param  {Queue~queueCallback}  cb\n * @return {Promise<null>}\n */\nasync function pushToQueue(task, cb) {\n  try {\n    const node = await processRemoteNode(task)\n    return cb(null, node)\n  } catch (e) {\n    return cb(e)\n  }\n}\n\n/******************\n * Core Functions *\n ******************/\n\n/**\n * requestRemoteNode\n * --\n * Download the requested file\n *\n * @param  {String}   url\n * @param  {Headers}  headers\n * @param  {String}   tmpFilename\n * @param  {Object}   httpOpts\n * @param  {number}   attempt\n * @return {Promise<Object>}  Resolves with the [http Result Object]{@link https://nodejs.org/api/http.html#http_class_http_serverresponse}\n */\nconst requestRemoteNode = (url, headers, tmpFilename, httpOpts, attempt = 1) =>\n  new Promise((resolve, reject) => {\n    let timeout\n\n    // Called if we stall without receiving any data\n    const handleTimeout = async () => {\n      fsWriteStream.close()\n      fs.removeSync(tmpFilename)\n      if (attempt < STALL_RETRY_LIMIT) {\n        // Retry by calling ourself recursively\n        resolve(\n          requestRemoteNode(url, headers, tmpFilename, httpOpts, attempt + 1)\n        )\n      } else {\n        processingCache[url] = null\n        totalJobs -= 1\n        bar.total = totalJobs\n        reject(\n          new Error(\n            `Failed to download ${url} after ${STALL_RETRY_LIMIT} attempts`\n          )\n        )\n      }\n    }\n\n    const resetTimeout = () => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(handleTimeout, STALL_TIMEOUT)\n    }\n\n    const responseStream = got.stream(url, {\n      headers,\n      timeout: { send: CONNECTION_TIMEOUT },\n      ...httpOpts,\n    })\n    const fsWriteStream = fs.createWriteStream(tmpFilename)\n    responseStream.pipe(fsWriteStream)\n\n    // If there's a 400/500 response or other error.\n    responseStream.on(`error`, error => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      processingCache[url] = null\n      totalJobs -= 1\n      bar.total = totalJobs\n      fs.removeSync(tmpFilename)\n      console.error(error)\n      reject(error)\n    })\n\n    fsWriteStream.on(`error`, error => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      processingCache[url] = null\n      totalJobs -= 1\n      bar.total = totalJobs\n      reject(error)\n    })\n\n    responseStream.on(`response`, response => {\n      resetTimeout()\n\n      fsWriteStream.on(`finish`, () => {\n        if (timeout) {\n          clearTimeout(timeout)\n        }\n        resolve(response)\n      })\n    })\n  })\n\n/**\n * processRemoteNode\n * --\n * Request the remote file and return the fileNode\n *\n * @param {CreateRemoteFileNodePayload} options\n * @return {Promise<Object>} Resolves with the fileNode\n */\nasync function processRemoteNode({\n  url,\n  cache,\n  createNode,\n  parentNodeId,\n  auth = {},\n  httpHeaders = {},\n  createNodeId,\n  ext,\n  name,\n}) {\n  const pluginCacheDir = cache.directory\n  // See if there's response headers for this url\n  // from a previous request.\n  const cachedHeaders = await cache.get(cacheId(url))\n\n  const headers = { ...httpHeaders }\n  if (cachedHeaders && cachedHeaders.etag) {\n    headers[`If-None-Match`] = cachedHeaders.etag\n  }\n\n  // Add htaccess authentication if passed in. This isn't particularly\n  // extensible. We should define a proper API that we validate.\n  const httpOpts = {}\n  if (auth?.htaccess_pass && auth?.htaccess_user) {\n    headers[`Authorization`] = `Basic ${b64e(\n      `${auth.htaccess_user}:${auth.htaccess_pass}`\n    )}`\n  }\n\n  // Create the temp and permanent file names for the url.\n  const digest = createContentDigest(url)\n  if (!name) {\n    name = getRemoteFileName(url)\n  }\n  if (!ext) {\n    ext = getRemoteFileExtension(url)\n  }\n\n  const tmpFilename = createFilePath(pluginCacheDir, `tmp-${digest}`, ext)\n\n  // Fetch the file.\n  const response = await requestRemoteNode(url, headers, tmpFilename, httpOpts)\n\n  if (response.statusCode == 200) {\n    // Save the response headers for future requests.\n    await cache.set(cacheId(url), response.headers)\n  }\n\n  // If the user did not provide an extension and we couldn't get one from remote file, try and guess one\n  if (ext === ``) {\n    const buffer = readChunk.sync(tmpFilename, 0, fileType.minimumBytes)\n    const filetype = fileType(buffer)\n    if (filetype) {\n      ext = `.${filetype.ext}`\n    }\n  }\n\n  const filename = createFilePath(\n    path.join(pluginCacheDir, digest),\n    String(name),\n    ext\n  )\n\n  // If the status code is 200, move the piped temp file to the real name.\n  if (response.statusCode === 200) {\n    await fs.move(tmpFilename, filename, { overwrite: true })\n    // Else if 304, remove the empty response.\n  } else {\n    processingCache[url] = null\n    totalJobs -= 1\n\n    bar.total = totalJobs\n\n    await fs.remove(tmpFilename)\n  }\n\n  // Create the file node.\n  const fileNode = await createFileNode(filename, createNodeId, {})\n  fileNode.internal.description = `File \"${url}\"`\n  fileNode.url = url\n  fileNode.parent = parentNodeId\n  // Override the default plugin as gatsby-source-filesystem needs to\n  // be the owner of File nodes or there'll be conflicts if any other\n  // File nodes are created through normal usages of\n  // gatsby-source-filesystem.\n  await createNode(fileNode, { name: `gatsby-source-filesystem` })\n\n  return fileNode\n}\n\n/**\n * Index of promises resolving to File node from remote url\n */\nconst processingCache = {}\n/**\n * pushTask\n * --\n * pushes a task in to the Queue and the processing cache\n *\n * Promisfy a task in queue\n * @param {CreateRemoteFileNodePayload} task\n * @return {Promise<Object>}\n */\nconst pushTask = task =>\n  new Promise((resolve, reject) => {\n    getQueue(task.limit)\n      .push(task)\n      .on(`finish`, task => {\n        resolve(task)\n      })\n      .on(`failed`, err => {\n        reject(new Error(`failed to process ${task.url}\\n${err}`))\n      })\n  })\n\n/***************\n * Entry Point *\n ***************/\n\n/**\n * createRemoteFileNode\n * --\n *\n * Download a remote file\n * First checks cache to ensure duplicate requests aren't processed\n * Then pushes to a queue\n *\n * @param {CreateRemoteFileNodePayload} options\n * @return {Promise<Object>}                  Returns the created node\n */\nmodule.exports = ({\n  url,\n  cache,\n  createNode,\n  getCache,\n  parentNodeId = null,\n  auth = {},\n  httpHeaders = {},\n  createNodeId,\n  ext = null,\n  name = null,\n  reporter,\n  pluginOptions,\n}) => {\n  const limit = pluginOptions?.type?.MediaItem?.localFile?.requestConcurrency\n  if (doneQueueTimeout) {\n    // this is to give the bar a little time to wait when there are pauses\n    // between file downloads.\n    clearTimeout(doneQueueTimeout)\n  }\n\n  // if the url isn't already encoded\n  // so decoding it doesn't do anything\n  if (decodeURI(url) === url) {\n    // encode the uri\n    // this accounts for special characters in filenames\n    url = encodeURI(url)\n  }\n\n  // validation of the input\n  // without this it's notoriously easy to pass in the wrong `createNodeId`\n  // see gatsbyjs/gatsby#6643\n  if (typeof createNodeId !== `function`) {\n    throw new Error(\n      `createNodeId must be a function, was ${typeof createNodeId}`\n    )\n  }\n  if (typeof createNode !== `function`) {\n    throw new Error(`createNode must be a function, was ${typeof createNode}`)\n  }\n  if (typeof getCache === `function`) {\n    // use cache of this plugin and not cache of function caller\n    cache = getCache(`gatsby-source-filesystem`)\n  }\n  if (typeof cache !== `object`) {\n    throw new Error(\n      `Neither \"cache\" or \"getCache\" was passed. getCache must be function that return Gatsby cache, \"cache\" must be the Gatsby cache, was ${typeof cache}`\n    )\n  }\n\n  // Check if we already requested node for this remote file\n  // and return stored promise if we did.\n  if (processingCache[url]) {\n    return processingCache[url]\n  }\n\n  if (!url || isWebUri(url) === undefined) {\n    return Promise.reject(\n      new Error(\n        `url passed to create-remote-file-node is either missing or not a proper web uri: ${url}`\n      )\n    )\n  }\n\n  if (totalJobs === 0) {\n    bar = reporter.createProgress(`Downloading remote files`)\n    bar.start()\n  }\n\n  totalJobs += 1\n\n  bar.total = totalJobs\n\n  const fileDownloadPromise = pushTask({\n    url,\n    cache,\n    createNode,\n    parentNodeId,\n    createNodeId,\n    auth,\n    httpHeaders,\n    ext,\n    name,\n    limit,\n  })\n\n  processingCache[url] = fileDownloadPromise.then(node => {\n    bar.tick()\n\n    return node\n  })\n\n  return processingCache[url]\n}\n"],"mappings":"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"}