{"version":3,"file":"index.js","names":["sourceNodes","helpers","cache","webhookBody","refetchAll","preview","sourcePreviews","token","userDatabaseId","now","Date","nonNodeRootFieldsPromise","fetchAndCreateNonNodeRootFields","lastCompletedSourceTime","refreshing","since","get","LAST_COMPLETED_SOURCE_TIME","schemaWasChanged","foundUsableHardCachedData","store","getState","remoteSchema","fetchEverything","process","env","NODE_ENV","fetchAndCreateAllNodes","fetchAndApplyNodeUpdates","allowFileDownloaderProgressBarToClear","set","dispatch","setSchemaWasChanged","develop","resumeRefreshPolling"],"sources":["../../../src/steps/source-nodes/index.ts"],"sourcesContent":["import { Step } from \"./../../utils/run-steps\"\nimport fetchAndApplyNodeUpdates from \"./update-nodes/fetch-node-updates\"\n\nimport { fetchAndCreateAllNodes } from \"./fetch-nodes/fetch-nodes\"\n\nimport { LAST_COMPLETED_SOURCE_TIME } from \"~/constants\"\nimport store from \"~/store\"\nimport fetchAndCreateNonNodeRootFields from \"./create-nodes/fetch-and-create-non-node-root-fields\"\nimport { allowFileDownloaderProgressBarToClear } from \"./create-nodes/create-remote-file-node/progress-bar-promise\"\nimport { sourcePreviews } from \"~/steps/preview\"\n\nconst sourceNodes: Step = async helpers => {\n  const { cache, webhookBody, refetchAll } = helpers\n\n  // if this is a preview we want to process it and return early\n  if (webhookBody.preview) {\n    await sourcePreviews(helpers)\n\n    return\n  }\n  // if it's not a preview but we have a token\n  // we should source any pending previews then continue sourcing\n  else if (webhookBody.token && webhookBody.userDatabaseId) {\n    await sourcePreviews(helpers)\n  }\n\n  const now = Date.now()\n\n  // fetch non-node root fields such as settings.\n  // For now, we're refetching them on every build\n  const nonNodeRootFieldsPromise = fetchAndCreateNonNodeRootFields()\n\n  const lastCompletedSourceTime =\n    webhookBody.refreshing && webhookBody.since\n      ? webhookBody.since\n      : await cache.get(LAST_COMPLETED_SOURCE_TIME)\n\n  const { schemaWasChanged, foundUsableHardCachedData } =\n    store.getState().remoteSchema\n\n  const fetchEverything =\n    foundUsableHardCachedData ||\n    !lastCompletedSourceTime ||\n    refetchAll ||\n    // don't refetch everything in development\n    (process.env.NODE_ENV !== `development` &&\n      // and the schema was changed\n      schemaWasChanged)\n\n  // If this is an uncached build,\n  // or our initial build to fetch and cache everything didn't complete,\n  // pull everything from WPGQL\n  if (fetchEverything) {\n    await fetchAndCreateAllNodes()\n  }\n\n  // If we've already successfully pulled everything from WPGraphQL\n  // just pull the latest changes\n  else if (!fetchEverything) {\n    await fetchAndApplyNodeUpdates({\n      since: lastCompletedSourceTime,\n    })\n  }\n\n  await nonNodeRootFieldsPromise\n\n  allowFileDownloaderProgressBarToClear()\n  await helpers.cache.set(LAST_COMPLETED_SOURCE_TIME, now)\n\n  const { dispatch } = store\n  dispatch.remoteSchema.setSchemaWasChanged(false)\n  dispatch.develop.resumeRefreshPolling()\n}\n\nexport { sourceNodes }\n"],"mappings":";;;;;;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,WAAiB,GAAG,MAAMC,OAAN,IAAiB;EACzC,MAAM;IAAEC,KAAF;IAASC,WAAT;IAAsBC;EAAtB,IAAqCH,OAA3C,CADyC,CAGzC;;EACA,IAAIE,WAAW,CAACE,OAAhB,EAAyB;IACvB,MAAM,IAAAC,uBAAA,EAAeL,OAAf,CAAN;IAEA;EACD,CAJD,CAKA;EACA;EANA,KAOK,IAAIE,WAAW,CAACI,KAAZ,IAAqBJ,WAAW,CAACK,cAArC,EAAqD;IACxD,MAAM,IAAAF,uBAAA,EAAeL,OAAf,CAAN;EACD;;EAED,MAAMQ,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ,CAfyC,CAiBzC;EACA;;EACA,MAAME,wBAAwB,GAAG,IAAAC,wCAAA,GAAjC;EAEA,MAAMC,uBAAuB,GAC3BV,WAAW,CAACW,UAAZ,IAA0BX,WAAW,CAACY,KAAtC,GACIZ,WAAW,CAACY,KADhB,GAEI,MAAMb,KAAK,CAACc,GAAN,CAAUC,qCAAV,CAHZ;;EAKA,MAAM;IAAEC,gBAAF;IAAoBC;EAApB,IACJC,cAAA,CAAMC,QAAN,GAAiBC,YADnB;;EAGA,MAAMC,eAAe,GACnBJ,yBAAyB,IACzB,CAACN,uBADD,IAEAT,UAFA,IAGA;EACCoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,aAA1B,IACC;EACAR,gBAPJ,CA7ByC,CAsCzC;EACA;EACA;;EACA,IAAIK,eAAJ,EAAqB;IACnB,MAAM,IAAAI,kCAAA,GAAN;EACD,CAFD,CAIA;EACA;EALA,KAMK,IAAI,CAACJ,eAAL,EAAsB;IACzB,MAAM,IAAAK,yBAAA,EAAyB;MAC7Bb,KAAK,EAAEF;IADsB,CAAzB,CAAN;EAGD;;EAED,MAAMF,wBAAN;EAEA,IAAAkB,yDAAA;EACA,MAAM5B,OAAO,CAACC,KAAR,CAAc4B,GAAd,CAAkBb,qCAAlB,EAA8CR,GAA9C,CAAN;EAEA,MAAM;IAAEsB;EAAF,IAAeX,cAArB;EACAW,QAAQ,CAACT,YAAT,CAAsBU,mBAAtB,CAA0C,KAA1C;EACAD,QAAQ,CAACE,OAAT,CAAiBC,oBAAjB;AACD,CA7DD"}