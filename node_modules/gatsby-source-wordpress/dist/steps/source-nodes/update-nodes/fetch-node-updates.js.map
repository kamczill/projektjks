{"version":3,"file":"fetch-node-updates.js","names":["touchValidNodes","helpers","getGatsbyApi","actions","validNodeIds","getPersistentCache","key","CREATED_NODE_IDS","length","forEach","nodeId","touchNode","getNode","fetchAndApplyNodeUpdates","since","throwFetchErrors","throwGqlErrors","pluginOptions","cache","reporter","activity","activityTimer","formatLogMessage","start","get","LAST_COMPLETED_SOURCE_TIME","wpActions","didUpdate","fetchAndRunWpActions","end"],"sources":["../../../../src/steps/source-nodes/update-nodes/fetch-node-updates.js"],"sourcesContent":["import { CREATED_NODE_IDS, LAST_COMPLETED_SOURCE_TIME } from \"~/constants\"\nimport { fetchAndRunWpActions } from \"./wp-actions\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\nimport { getPersistentCache } from \"~/utils/cache\"\n\nexport const touchValidNodes = async () => {\n  const { helpers } = getGatsbyApi()\n  const { actions } = helpers\n\n  const validNodeIds = await getPersistentCache({ key: CREATED_NODE_IDS })\n\n  if (validNodeIds?.length) {\n    validNodeIds.forEach(nodeId => actions.touchNode(helpers.getNode(nodeId)))\n  }\n}\n\n/**\n * fetchAndApplyNodeUpdates\n *\n * uses query info (types and gql query strings) fetched/generated in\n * onPreBootstrap to ask WordPress for the latest changes, and then\n * apply creates, updates, and deletes to Gatsby nodes\n */\nconst fetchAndApplyNodeUpdates = async ({\n  since,\n  throwFetchErrors = false,\n  throwGqlErrors = false,\n}) => {\n  const { helpers, pluginOptions } = getGatsbyApi()\n\n  const { cache, reporter } = helpers\n\n  const activity = reporter.activityTimer(\n    formatLogMessage(`pull updates since last build`)\n  )\n  activity.start()\n\n  if (!since) {\n    since = await cache.get(LAST_COMPLETED_SOURCE_TIME)\n  }\n\n  // Check with WPGQL to create, delete, or update cached WP nodes\n  const { wpActions, didUpdate } = await fetchAndRunWpActions({\n    since,\n    helpers,\n    pluginOptions,\n    throwFetchErrors,\n    throwGqlErrors,\n  })\n\n  await touchValidNodes()\n\n  activity.end()\n\n  return { wpActions, didUpdate }\n}\n\nexport default fetchAndApplyNodeUpdates\n"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,eAAe,GAAG,YAAY;EACzC,MAAM;IAAEC;EAAF,IAAc,IAAAC,0BAAA,GAApB;EACA,MAAM;IAAEC;EAAF,IAAcF,OAApB;EAEA,MAAMG,YAAY,GAAG,MAAM,IAAAC,yBAAA,EAAmB;IAAEC,GAAG,EAAEC;EAAP,CAAnB,CAA3B;;EAEA,IAAIH,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAEI,MAAlB,EAA0B;IACxBJ,YAAY,CAACK,OAAb,CAAqBC,MAAM,IAAIP,OAAO,CAACQ,SAAR,CAAkBV,OAAO,CAACW,OAAR,CAAgBF,MAAhB,CAAlB,CAA/B;EACD;AACF,CATM;AAWP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMG,wBAAwB,GAAG,OAAO;EACtCC,KADsC;EAEtCC,gBAAgB,GAAG,KAFmB;EAGtCC,cAAc,GAAG;AAHqB,CAAP,KAI3B;EACJ,MAAM;IAAEf,OAAF;IAAWgB;EAAX,IAA6B,IAAAf,0BAAA,GAAnC;EAEA,MAAM;IAAEgB,KAAF;IAASC;EAAT,IAAsBlB,OAA5B;EAEA,MAAMmB,QAAQ,GAAGD,QAAQ,CAACE,aAAT,CACf,IAAAC,kCAAA,EAAkB,+BAAlB,CADe,CAAjB;EAGAF,QAAQ,CAACG,KAAT;;EAEA,IAAI,CAACT,KAAL,EAAY;IACVA,KAAK,GAAG,MAAMI,KAAK,CAACM,GAAN,CAAUC,qCAAV,CAAd;EACD,CAZG,CAcJ;;;EACA,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA2B,MAAM,IAAAC,+BAAA,EAAqB;IAC1Dd,KAD0D;IAE1Db,OAF0D;IAG1DgB,aAH0D;IAI1DF,gBAJ0D;IAK1DC;EAL0D,CAArB,CAAvC;EAQA,MAAMhB,eAAe,EAArB;EAEAoB,QAAQ,CAACS,GAAT;EAEA,OAAO;IAAEH,SAAF;IAAaC;EAAb,CAAP;AACD,CAhCD;;eAkCed,wB"}