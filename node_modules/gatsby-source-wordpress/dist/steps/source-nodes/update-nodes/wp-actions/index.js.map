{"version":3,"file":"index.js","names":["getWpActions","variables","helpers","throwFetchErrors","throwGqlErrors","sourceTime","Date","now","actionMonitorActions","paginatedWpNodeFetch","contentTypePlural","query","actionMonitorQuery","nodeTypeName","length","cache","set","LAST_COMPLETED_SOURCE_TIME","handleWpActions","api","cachedNodeIds","wpAction","actionType","wpActionDELETE","wpActionUPDATE","fetchAndCreateNonNodeRootFields","sourceNodes","refetchAll","setHardCachedNodes","fetchAndRunWpActions","pluginOptions","since","wpActions","didUpdate"],"sources":["../../../../../src/steps/source-nodes/update-nodes/wp-actions/index.js"],"sourcesContent":["import { actionMonitorQuery } from \"~/utils/graphql-queries\"\nimport wpActionDELETE from \"./delete\"\nimport wpActionUPDATE from \"./update\"\nimport { LAST_COMPLETED_SOURCE_TIME } from \"~/constants\"\nimport { paginatedWpNodeFetch } from \"~/steps/source-nodes/fetch-nodes/fetch-nodes-paginated\"\n\nimport fetchAndCreateNonNodeRootFields from \"~/steps/source-nodes/create-nodes/fetch-and-create-non-node-root-fields\"\nimport { setHardCachedNodes } from \"~/utils/cache\"\nimport { sourceNodes } from \"~/steps/source-nodes\"\n\n/**\n * getWpActions\n *\n * pull the latest changes from WP and determine which of those changes\n * require updates in Gatsby, then return valid changes\n * An example of a non-valid change would be a post that was created\n * and then immediately deleted.\n */\nexport const getWpActions = async ({\n  variables,\n  helpers,\n  throwFetchErrors = false,\n  throwGqlErrors = false,\n}) => {\n  const sourceTime = Date.now()\n\n  // @todo add pagination in case there are more than 100 actions since the last build\n  const actionMonitorActions = await paginatedWpNodeFetch({\n    contentTypePlural: `actionMonitorActions`,\n    query: actionMonitorQuery,\n    nodeTypeName: `ActionMonitor`,\n    helpers,\n    throwFetchErrors,\n    throwGqlErrors,\n    ...variables,\n  })\n\n  if (!actionMonitorActions || !actionMonitorActions.length) {\n    return []\n  }\n\n  await helpers.cache.set(LAST_COMPLETED_SOURCE_TIME, sourceTime)\n\n  return actionMonitorActions\n}\n\n/**\n * Acts on changes in WordPress to call functions that sync Gatsby with\n * the latest WP changes\n */\nexport const handleWpActions = async api => {\n  const { cachedNodeIds, helpers } = api\n\n  switch (api.wpAction.actionType) {\n    case `DELETE`:\n      await wpActionDELETE(api)\n      break\n    case `UPDATE`:\n    case `CREATE`:\n      await wpActionUPDATE(api)\n      break\n    case `NON_NODE_ROOT_FIELDS`:\n      await fetchAndCreateNonNodeRootFields()\n      break\n    case `REFETCH_ALL`:\n      await sourceNodes({ ...helpers, refetchAll: true }, {})\n  }\n\n  await setHardCachedNodes({ helpers })\n\n  return cachedNodeIds\n}\n\n/**\n * fetchAndRunWpActions\n *\n * fetches a list of latest changes in WordPress\n * and then acts on those changes\n */\nexport const fetchAndRunWpActions = async ({\n  helpers,\n  pluginOptions,\n  since,\n  throwFetchErrors = false,\n  throwGqlErrors = false,\n}) => {\n  // check for new, edited, or deleted posts in WP \"Action Monitor\"\n  const wpActions = await getWpActions({\n    variables: {\n      since,\n    },\n    helpers,\n    throwFetchErrors,\n    throwGqlErrors,\n  })\n\n  const didUpdate = !!wpActions.length\n\n  if (didUpdate) {\n    for (const wpAction of wpActions) {\n      // Create, update, and delete nodes\n      await handleWpActions({\n        helpers,\n        pluginOptions,\n        wpAction,\n      })\n    }\n  }\n\n  return {\n    wpActions,\n    didUpdate,\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,YAAY,GAAG,OAAO;EACjCC,SADiC;EAEjCC,OAFiC;EAGjCC,gBAAgB,GAAG,KAHc;EAIjCC,cAAc,GAAG;AAJgB,CAAP,KAKtB;EACJ,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,EAAnB,CADI,CAGJ;;EACA,MAAMC,oBAAoB,GAAG,MAAM,IAAAC,yCAAA,EAAqB;IACtDC,iBAAiB,EAAG,sBADkC;IAEtDC,KAAK,EAAEC,kCAF+C;IAGtDC,YAAY,EAAG,eAHuC;IAItDX,OAJsD;IAKtDC,gBALsD;IAMtDC,cANsD;IAOtD,GAAGH;EAPmD,CAArB,CAAnC;;EAUA,IAAI,CAACO,oBAAD,IAAyB,CAACA,oBAAoB,CAACM,MAAnD,EAA2D;IACzD,OAAO,EAAP;EACD;;EAED,MAAMZ,OAAO,CAACa,KAAR,CAAcC,GAAd,CAAkBC,qCAAlB,EAA8CZ,UAA9C,CAAN;EAEA,OAAOG,oBAAP;AACD,CA1BM;AA4BP;AACA;AACA;AACA;;;;;AACO,MAAMU,eAAe,GAAG,MAAMC,GAAN,IAAa;EAC1C,MAAM;IAAEC,aAAF;IAAiBlB;EAAjB,IAA6BiB,GAAnC;;EAEA,QAAQA,GAAG,CAACE,QAAJ,CAAaC,UAArB;IACE,KAAM,QAAN;MACE,MAAM,IAAAC,eAAA,EAAeJ,GAAf,CAAN;MACA;;IACF,KAAM,QAAN;IACA,KAAM,QAAN;MACE,MAAM,IAAAK,eAAA,EAAeL,GAAf,CAAN;MACA;;IACF,KAAM,sBAAN;MACE,MAAM,IAAAM,wCAAA,GAAN;MACA;;IACF,KAAM,aAAN;MACE,MAAM,IAAAC,aAAA,EAAY,EAAE,GAAGxB,OAAL;QAAcyB,UAAU,EAAE;MAA1B,CAAZ,EAA8C,EAA9C,CAAN;EAZJ;;EAeA,MAAM,IAAAC,yBAAA,EAAmB;IAAE1B;EAAF,CAAnB,CAAN;EAEA,OAAOkB,aAAP;AACD,CArBM;AAuBP;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMS,oBAAoB,GAAG,OAAO;EACzC3B,OADyC;EAEzC4B,aAFyC;EAGzCC,KAHyC;EAIzC5B,gBAAgB,GAAG,KAJsB;EAKzCC,cAAc,GAAG;AALwB,CAAP,KAM9B;EACJ;EACA,MAAM4B,SAAS,GAAG,MAAMhC,YAAY,CAAC;IACnCC,SAAS,EAAE;MACT8B;IADS,CADwB;IAInC7B,OAJmC;IAKnCC,gBALmC;IAMnCC;EANmC,CAAD,CAApC;EASA,MAAM6B,SAAS,GAAG,CAAC,CAACD,SAAS,CAAClB,MAA9B;;EAEA,IAAImB,SAAJ,EAAe;IACb,KAAK,MAAMZ,QAAX,IAAuBW,SAAvB,EAAkC;MAChC;MACA,MAAMd,eAAe,CAAC;QACpBhB,OADoB;QAEpB4B,aAFoB;QAGpBT;MAHoB,CAAD,CAArB;IAKD;EACF;;EAED,OAAO;IACLW,SADK;IAELC;EAFK,CAAP;AAID,CAlCM"}