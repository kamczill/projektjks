{"version":3,"file":"type-filters.js","names":["typeDefinitionFilters","typeName","typeDef","type","interfaces","push","buildInterfacesListForType","includes","fields","nodeType","date","dateField","extensions","dateformat","dateGmt","modified","modifiedGmt","objectType","localFile","link","from"],"sources":["../../../src/steps/create-schema-customization/type-filters.js"],"sourcesContent":["import { buildInterfacesListForType } from \"./helpers\"\n\nexport const typeDefinitionFilters = [\n  {\n    typeName: `__all`,\n    typeDef: (typeDef, { type }) => {\n      if (type.interfaces && typeDef) {\n        typeDef.interfaces ||= []\n        typeDef.interfaces.push(...buildInterfacesListForType(type))\n      }\n\n      if (typeDef?.interfaces?.includes(`Node`)) {\n        // used to filter by different node types within a node interface\n        typeDef.fields.nodeType = `String`\n      }\n\n      if (typeDef?.fields?.date) {\n        const dateField = {\n          ...typeDef.fields.date,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.date = dateField\n      }\n\n      if (typeDef?.fields?.dateGmt) {\n        const dateField = {\n          ...typeDef.fields.dateGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.dateGmt = dateField\n      }\n\n      if (typeDef?.fields?.modified) {\n        const dateField = {\n          ...typeDef.fields.modified,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modified = dateField\n      }\n\n      if (typeDef?.fields?.modifiedGmt) {\n        const dateField = {\n          ...typeDef.fields.modifiedGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modifiedGmt = dateField\n      }\n\n      return typeDef\n    },\n  },\n  {\n    typeName: `MediaItem`,\n    typeDef: objectType => {\n      objectType.fields.localFile = {\n        type: `File`,\n        extensions: {\n          link: { from: `localFile.id` },\n        },\n      }\n\n      return objectType\n    },\n  },\n]\n"],"mappings":";;;;;AAAA;;AAEO,MAAMA,qBAAqB,GAAG,CACnC;EACEC,QAAQ,EAAG,OADb;EAEEC,OAAO,EAAE,CAACA,OAAD,EAAU;IAAEC;EAAF,CAAV,KAAuB;IAAA;;IAC9B,IAAIA,IAAI,CAACC,UAAL,IAAmBF,OAAvB,EAAgC;MAC9BA,OAAO,CAACE,UAAR,KAAuB,EAAvB;MACAF,OAAO,CAACE,UAAR,CAAmBC,IAAnB,CAAwB,GAAG,IAAAC,mCAAA,EAA2BH,IAA3B,CAA3B;IACD;;IAED,IAAID,OAAJ,aAAIA,OAAJ,sCAAIA,OAAO,CAAEE,UAAb,gDAAI,oBAAqBG,QAArB,CAA+B,MAA/B,CAAJ,EAA2C;MACzC;MACAL,OAAO,CAACM,MAAR,CAAeC,QAAf,GAA2B,QAA3B;IACD;;IAED,IAAIP,OAAJ,aAAIA,OAAJ,kCAAIA,OAAO,CAAEM,MAAb,4CAAI,gBAAiBE,IAArB,EAA2B;MACzB,MAAMC,SAAS,GAAG,EAChB,GAAGT,OAAO,CAACM,MAAR,CAAeE,IADF;QAEhBP,IAAI,EAAG,MAFS;QAGhBS,UAAU,EAAE;UACVC,UAAU,EAAE;QADF;MAHI,CAAlB;MAQAX,OAAO,CAACM,MAAR,CAAeE,IAAf,GAAsBC,SAAtB;IACD;;IAED,IAAIT,OAAJ,aAAIA,OAAJ,mCAAIA,OAAO,CAAEM,MAAb,6CAAI,iBAAiBM,OAArB,EAA8B;MAC5B,MAAMH,SAAS,GAAG,EAChB,GAAGT,OAAO,CAACM,MAAR,CAAeM,OADF;QAEhBX,IAAI,EAAG,MAFS;QAGhBS,UAAU,EAAE;UACVC,UAAU,EAAE;QADF;MAHI,CAAlB;MAQAX,OAAO,CAACM,MAAR,CAAeM,OAAf,GAAyBH,SAAzB;IACD;;IAED,IAAIT,OAAJ,aAAIA,OAAJ,mCAAIA,OAAO,CAAEM,MAAb,6CAAI,iBAAiBO,QAArB,EAA+B;MAC7B,MAAMJ,SAAS,GAAG,EAChB,GAAGT,OAAO,CAACM,MAAR,CAAeO,QADF;QAEhBZ,IAAI,EAAG,MAFS;QAGhBS,UAAU,EAAE;UACVC,UAAU,EAAE;QADF;MAHI,CAAlB;MAQAX,OAAO,CAACM,MAAR,CAAeO,QAAf,GAA0BJ,SAA1B;IACD;;IAED,IAAIT,OAAJ,aAAIA,OAAJ,mCAAIA,OAAO,CAAEM,MAAb,6CAAI,iBAAiBQ,WAArB,EAAkC;MAChC,MAAML,SAAS,GAAG,EAChB,GAAGT,OAAO,CAACM,MAAR,CAAeQ,WADF;QAEhBb,IAAI,EAAG,MAFS;QAGhBS,UAAU,EAAE;UACVC,UAAU,EAAE;QADF;MAHI,CAAlB;MAQAX,OAAO,CAACM,MAAR,CAAeQ,WAAf,GAA6BL,SAA7B;IACD;;IAED,OAAOT,OAAP;EACD;AA9DH,CADmC,EAiEnC;EACED,QAAQ,EAAG,WADb;EAEEC,OAAO,EAAEe,UAAU,IAAI;IACrBA,UAAU,CAACT,MAAX,CAAkBU,SAAlB,GAA8B;MAC5Bf,IAAI,EAAG,MADqB;MAE5BS,UAAU,EAAE;QACVO,IAAI,EAAE;UAAEC,IAAI,EAAG;QAAT;MADI;IAFgB,CAA9B;IAOA,OAAOH,UAAP;EACD;AAXH,CAjEmC,CAA9B"}