{"version":3,"file":"default-resolver.js","names":["buildDefaultResolver","transformerApi","source","_","context","fieldName","field","gatsbyNodeTypes","finalFieldValue","resolvedField","autoAliasedFieldPropertyName","type","name","aliasedField","typeName","findNamedTypeName","autoAliasedFieldName","aliasedField2","__typename","buildTypeName","isANodeConnection","id","Object","keys","length","includes","gatsbyNodeResolver","buildGatsbyNodeObjectResolver"],"sources":["../../../../src/steps/create-schema-customization/transform-fields/default-resolver.js"],"sourcesContent":["import { findNamedTypeName } from \"~/steps/create-schema-customization/helpers\"\n\nimport { buildGatsbyNodeObjectResolver } from \"~/steps/create-schema-customization/transform-fields/transform-object\"\nimport { buildTypeName } from \"../helpers\"\n\nexport const buildDefaultResolver = transformerApi => (source, _, context) => {\n  const { fieldName, field, gatsbyNodeTypes } = transformerApi\n\n  let finalFieldValue\n\n  const resolvedField = source[fieldName]\n\n  if (typeof resolvedField !== `undefined`) {\n    finalFieldValue = resolvedField\n  }\n\n  const autoAliasedFieldPropertyName = `${fieldName}__typename_${field?.type?.name}`\n\n  const aliasedField = source[autoAliasedFieldPropertyName]\n\n  if (\n    typeof resolvedField === `undefined` &&\n    typeof aliasedField !== `undefined`\n  ) {\n    finalFieldValue = aliasedField\n  }\n\n  // the findNamedTypeName helpers was written after this resolver\n  // had been in production for a while.\n  // so we don't know if in all cases it will find the right typename\n  // for this resolver..\n  // So the old way of doing it is above in autoAliasedFieldPropertyName\n  // @todo write comprehesive data resolution integration tests\n  // using many different WPGraphQL extensions\n  // then come back and remove the `return aliasedField` line and\n  // see if this still resolves everything properly\n  const typeName = findNamedTypeName(field.type)\n  const autoAliasedFieldName = `${fieldName}__typename_${typeName}`\n\n  const aliasedField2 = source[autoAliasedFieldName]\n\n  if (\n    typeof resolvedField === `undefined` &&\n    typeof aliasedField2 !== `undefined`\n  ) {\n    finalFieldValue = aliasedField2\n  }\n\n  if (finalFieldValue?.__typename) {\n    // in Gatsby V3 this property is used to determine the type of an interface field\n    // instead of the resolveType fn. This means we need to prefix it so that gql doesn't throw errors about missing types.\n    finalFieldValue.__typename = buildTypeName(finalFieldValue.__typename)\n  }\n\n  const isANodeConnection =\n    // if this field has just an id and typename\n    finalFieldValue?.id &&\n    finalFieldValue?.__typename &&\n    Object.keys(finalFieldValue).length === 2 &&\n    // and it's a Gatsby Node type\n    gatsbyNodeTypes.includes(finalFieldValue.__typename)\n\n  if (isANodeConnection) {\n    const gatsbyNodeResolver = buildGatsbyNodeObjectResolver(transformerApi)\n    return gatsbyNodeResolver(source, _, context)\n  }\n\n  return finalFieldValue\n}\n"],"mappings":";;;;;AAAA;;AAEA;;AAGO,MAAMA,oBAAoB,GAAGC,cAAc,IAAI,CAACC,MAAD,EAASC,CAAT,EAAYC,OAAZ,KAAwB;EAAA;;EAC5E,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC;EAApB,IAAwCN,cAA9C;EAEA,IAAIO,eAAJ;EAEA,MAAMC,aAAa,GAAGP,MAAM,CAACG,SAAD,CAA5B;;EAEA,IAAI,OAAOI,aAAP,KAA0B,WAA9B,EAA0C;IACxCD,eAAe,GAAGC,aAAlB;EACD;;EAED,MAAMC,4BAA4B,GAAI,GAAEL,SAAU,cAAaC,KAA1B,aAA0BA,KAA1B,sCAA0BA,KAAK,CAAEK,IAAjC,gDAA0B,YAAaC,IAAK,EAAjF;EAEA,MAAMC,YAAY,GAAGX,MAAM,CAACQ,4BAAD,CAA3B;;EAEA,IACE,OAAOD,aAAP,KAA0B,WAA1B,IACA,OAAOI,YAAP,KAAyB,WAF3B,EAGE;IACAL,eAAe,GAAGK,YAAlB;EACD,CApB2E,CAsB5E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAMC,QAAQ,GAAG,IAAAC,0BAAA,EAAkBT,KAAK,CAACK,IAAxB,CAAjB;EACA,MAAMK,oBAAoB,GAAI,GAAEX,SAAU,cAAaS,QAAS,EAAhE;EAEA,MAAMG,aAAa,GAAGf,MAAM,CAACc,oBAAD,CAA5B;;EAEA,IACE,OAAOP,aAAP,KAA0B,WAA1B,IACA,OAAOQ,aAAP,KAA0B,WAF5B,EAGE;IACAT,eAAe,GAAGS,aAAlB;EACD;;EAED,wBAAIT,eAAJ,6CAAI,iBAAiBU,UAArB,EAAiC;IAC/B;IACA;IACAV,eAAe,CAACU,UAAhB,GAA6B,IAAAC,sBAAA,EAAcX,eAAe,CAACU,UAA9B,CAA7B;EACD;;EAED,MAAME,iBAAiB,GACrB;EACA,sBAAAZ,eAAe,UAAf,8DAAiBa,EAAjB,2BACAb,eADA,sDACA,kBAAiBU,UADjB,KAEAI,MAAM,CAACC,IAAP,CAAYf,eAAZ,EAA6BgB,MAA7B,KAAwC,CAFxC,IAGA;EACAjB,eAAe,CAACkB,QAAhB,CAAyBjB,eAAe,CAACU,UAAzC,CANF;;EAQA,IAAIE,iBAAJ,EAAuB;IACrB,MAAMM,kBAAkB,GAAG,IAAAC,8CAAA,EAA8B1B,cAA9B,CAA3B;IACA,OAAOyB,kBAAkB,CAACxB,MAAD,EAASC,CAAT,EAAYC,OAAZ,CAAzB;EACD;;EAED,OAAOI,eAAP;AACD,CA/DM"}