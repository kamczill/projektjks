{"version":3,"file":"transform-union.js","names":["transformUnion","field","fieldName","type","buildTypeName","name","resolve","source","_","context","resolvedField","id","gatsbyNode","nodeModel","getNodeById","transformListOfUnions","typeSDLString","introspectionFieldTypeToSDL","length","reduce","accumulator","item","node","__typename","push"],"sources":["../../../../src/steps/create-schema-customization/transform-fields/transform-union.js"],"sourcesContent":["import { buildTypeName } from \"~/steps/create-schema-customization/helpers\"\nimport { findNamedTypeName, introspectionFieldTypeToSDL } from \"../helpers\"\n\nexport const transformUnion = ({ field, fieldName }) => {\n  return {\n    type: buildTypeName(field.type.name),\n    resolve: (source, _, context) => {\n      const resolvedField =\n        source[fieldName] ||\n        source[`${field.name}__typename_${field.type.name}`]\n\n      if (resolvedField && resolvedField.id) {\n        const gatsbyNode = context.nodeModel.getNodeById({\n          id: resolvedField.id,\n          type: resolvedField.type,\n        })\n\n        if (gatsbyNode) {\n          return gatsbyNode\n        }\n      }\n\n      return resolvedField ?? null\n    },\n  }\n}\n\nexport const transformListOfUnions = ({ field, fieldName }) => {\n  const typeSDLString = introspectionFieldTypeToSDL(field.type)\n\n  return {\n    type: typeSDLString,\n    resolve: (source, _, context) => {\n      const resolvedField =\n        source[fieldName] ??\n        source[`${field.name}__typename_${field.type.name}`]\n\n      if (\n        (!resolvedField && resolvedField !== false) ||\n        !resolvedField.length\n      ) {\n        return null\n      }\n\n      return resolvedField.reduce((accumulator, item) => {\n        const node = item?.id\n          ? context.nodeModel.getNodeById({\n              id: item.id,\n              type: buildTypeName(item.__typename),\n            })\n          : null\n\n        if (node) {\n          accumulator.push(node)\n        } else if (item && !item.id) {\n          accumulator.push(item)\n        }\n\n        return accumulator\n      }, [])\n    },\n  }\n}\n"],"mappings":";;;;;AAAA;;AAGO,MAAMA,cAAc,GAAG,CAAC;EAAEC,KAAF;EAASC;AAAT,CAAD,KAA0B;EACtD,OAAO;IACLC,IAAI,EAAE,IAAAC,sBAAA,EAAcH,KAAK,CAACE,IAAN,CAAWE,IAAzB,CADD;IAELC,OAAO,EAAE,CAACC,MAAD,EAASC,CAAT,EAAYC,OAAZ,KAAwB;MAC/B,MAAMC,aAAa,GACjBH,MAAM,CAACL,SAAD,CAAN,IACAK,MAAM,CAAE,GAAEN,KAAK,CAACI,IAAK,cAAaJ,KAAK,CAACE,IAAN,CAAWE,IAAK,EAA5C,CAFR;;MAIA,IAAIK,aAAa,IAAIA,aAAa,CAACC,EAAnC,EAAuC;QACrC,MAAMC,UAAU,GAAGH,OAAO,CAACI,SAAR,CAAkBC,WAAlB,CAA8B;UAC/CH,EAAE,EAAED,aAAa,CAACC,EAD6B;UAE/CR,IAAI,EAAEO,aAAa,CAACP;QAF2B,CAA9B,CAAnB;;QAKA,IAAIS,UAAJ,EAAgB;UACd,OAAOA,UAAP;QACD;MACF;;MAED,OAAOF,aAAP,aAAOA,aAAP,cAAOA,aAAP,GAAwB,IAAxB;IACD;EAnBI,CAAP;AAqBD,CAtBM;;;;AAwBA,MAAMK,qBAAqB,GAAG,CAAC;EAAEd,KAAF;EAASC;AAAT,CAAD,KAA0B;EAC7D,MAAMc,aAAa,GAAG,IAAAC,oCAAA,EAA4BhB,KAAK,CAACE,IAAlC,CAAtB;EAEA,OAAO;IACLA,IAAI,EAAEa,aADD;IAELV,OAAO,EAAE,CAACC,MAAD,EAASC,CAAT,EAAYC,OAAZ,KAAwB;MAAA;;MAC/B,MAAMC,aAAa,wBACjBH,MAAM,CAACL,SAAD,CADW,iEAEjBK,MAAM,CAAE,GAAEN,KAAK,CAACI,IAAK,cAAaJ,KAAK,CAACE,IAAN,CAAWE,IAAK,EAA5C,CAFR;;MAIA,IACG,CAACK,aAAD,IAAkBA,aAAa,KAAK,KAArC,IACA,CAACA,aAAa,CAACQ,MAFjB,EAGE;QACA,OAAO,IAAP;MACD;;MAED,OAAOR,aAAa,CAACS,MAAd,CAAqB,CAACC,WAAD,EAAcC,IAAd,KAAuB;QACjD,MAAMC,IAAI,GAAGD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEV,EAAN,GACTF,OAAO,CAACI,SAAR,CAAkBC,WAAlB,CAA8B;UAC5BH,EAAE,EAAEU,IAAI,CAACV,EADmB;UAE5BR,IAAI,EAAE,IAAAC,sBAAA,EAAciB,IAAI,CAACE,UAAnB;QAFsB,CAA9B,CADS,GAKT,IALJ;;QAOA,IAAID,IAAJ,EAAU;UACRF,WAAW,CAACI,IAAZ,CAAiBF,IAAjB;QACD,CAFD,MAEO,IAAID,IAAI,IAAI,CAACA,IAAI,CAACV,EAAlB,EAAsB;UAC3BS,WAAW,CAACI,IAAZ,CAAiBH,IAAjB;QACD;;QAED,OAAOD,WAAP;MACD,CAfM,EAeJ,EAfI,CAAP;IAgBD;EA9BI,CAAP;AAgCD,CAnCM"}