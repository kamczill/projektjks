{"version":3,"file":"index.js","names":["customizeSchema","actions","schema","store","gatsbyStore","state","getState","gatsbyApi","pluginOptions","remoteSchema","fieldAliases","fieldBlacklist","ingestibles","nonNodeRootFields","typeDefs","gatsbyNodeTypes","getGatsbyNodeTypeNames","typeBuilderApi","introspectionData","__schema","types","forEach","type","fieldOfTypeWasFetched","typeIsExcluded","typeName","name","builtType","kind","buildType","unionType","interfaceType","objectType","enumType","push","wpType","typePrefix","description","fields","interfaces","addRemoteFilePolyfillInterface","buildObjectType","createTypes","createSchemaCustomization","api","e","reporter","panic","id","CODES","SourcePluginCodeError","error","context","sourceMessage","formatLogMessage","message"],"sources":["../../../src/steps/create-schema-customization/index.js"],"sourcesContent":["import store from \"~/store\"\n\nimport { buildInterfacesListForType, fieldOfTypeWasFetched } from \"./helpers\"\n\nimport buildType from \"./build-types\"\nimport { getGatsbyNodeTypeNames } from \"../source-nodes/fetch-nodes/fetch-nodes\"\nimport { typeIsExcluded } from \"~/steps/ingest-remote-schema/is-excluded\"\nimport { formatLogMessage } from \"../../utils/format-log-message\"\nimport { CODES } from \"../../utils/report\"\nimport { addRemoteFilePolyfillInterface } from \"gatsby-plugin-utils/polyfill-remote-file\"\n\n/**\n * createSchemaCustomization\n */\nconst customizeSchema = async ({ actions, schema, store: gatsbyStore }) => {\n  const state = store.getState()\n\n  const {\n    gatsbyApi: { pluginOptions },\n    remoteSchema,\n  } = state\n\n  const {\n    fieldAliases,\n    fieldBlacklist,\n    ingestibles: { nonNodeRootFields },\n  } = remoteSchema\n\n  const typeDefs = []\n\n  const gatsbyNodeTypes = getGatsbyNodeTypeNames()\n\n  const typeBuilderApi = {\n    typeDefs,\n    schema,\n    gatsbyNodeTypes,\n    fieldAliases,\n    fieldBlacklist,\n    pluginOptions,\n  }\n\n  // create Gatsby node types\n  remoteSchema.introspectionData.__schema.types.forEach(type => {\n    if (\n      fieldOfTypeWasFetched(type) &&\n      !typeIsExcluded({ pluginOptions, typeName: type.name })\n    ) {\n      let builtType\n\n      switch (type.kind) {\n        case `UNION`:\n          builtType = buildType.unionType({ ...typeBuilderApi, type })\n          break\n        case `INTERFACE`:\n          builtType = buildType.interfaceType({ ...typeBuilderApi, type })\n          break\n        case `OBJECT`:\n          builtType = buildType.objectType({ ...typeBuilderApi, type })\n          break\n        case `ENUM`:\n          builtType = buildType.enumType({ ...typeBuilderApi, type })\n          break\n        case `SCALAR`:\n          /**\n           * custom scalar types aren't supported.\n           */\n          break\n      }\n\n      if (builtType) {\n        typeDefs.push(builtType)\n      }\n    }\n  })\n\n  // Create non Gatsby node types by creating a single node\n  // where the typename is the type prefix\n  // The node fields are the non-node root fields of the remote schema\n  // like so: query { prefix { ...fields } }\n  const wpType = buildType.objectType({\n    ...typeBuilderApi,\n    type: {\n      kind: `OBJECT`,\n      name: pluginOptions.schema.typePrefix,\n      description: `Non-node WPGraphQL root fields.`,\n      fields: nonNodeRootFields,\n      interfaces: [`Node`],\n    },\n  })\n\n  typeDefs.push(wpType)\n\n  typeDefs.push(\n    addRemoteFilePolyfillInterface(\n      schema.buildObjectType({\n        name: pluginOptions.schema.typePrefix + `MediaItem`,\n        fields: {},\n        interfaces: [`Node`, `RemoteFile`],\n      }),\n      {\n        schema,\n        actions,\n        store: gatsbyStore,\n      }\n    )\n  )\n\n  actions.createTypes(typeDefs)\n}\n\nconst createSchemaCustomization = async api => {\n  try {\n    await customizeSchema(api)\n  } catch (e) {\n    api.reporter.panic({\n      id: CODES.SourcePluginCodeError,\n      error: e,\n      context: {\n        sourceMessage: formatLogMessage(e.message),\n      },\n    })\n  }\n}\n\nexport { createSchemaCustomization }\n"],"mappings":"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"}