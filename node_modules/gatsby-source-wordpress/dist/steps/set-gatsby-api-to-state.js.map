{"version":3,"file":"set-gatsby-api-to-state.js","names":["hasDisplayedPreviewPresetMessage","setGatsbyApiToState","helpers","pluginOptions","traceId","filteredPluginOptions","processAndValidatePluginOptions","store","dispatch","gatsbyApi","setState","activePluginOptionsPresets","getState","length","previewOptimizationPreset","find","presetName","reporter","info","formatLogMessage","usingGatsbyV4OrGreater","options","type","__all","limit"],"sources":["../../src/steps/set-gatsby-api-to-state.ts"],"sourcesContent":["import store from \"~/store\"\nimport { processAndValidatePluginOptions } from \"./process-and-validate-plugin-options\"\nimport { formatLogMessage } from \"../utils/format-log-message\"\nimport { IPluginOptions } from \"~/models/gatsby-api\"\nimport { GatsbyNodeApiHelpers } from \"~/utils/gatsby-types\"\nimport { usingGatsbyV4OrGreater } from \"~/utils/gatsby-version\"\n\nlet hasDisplayedPreviewPresetMessage = false\n\nconst setGatsbyApiToState = (\n  helpers: GatsbyNodeApiHelpers,\n  pluginOptions: IPluginOptions\n): void => {\n  if (helpers.traceId === `refresh-createSchemaCustomization`) {\n    return\n  }\n\n  const filteredPluginOptions = processAndValidatePluginOptions(\n    helpers,\n    pluginOptions\n  )\n\n  //\n  // add the plugin options and Gatsby API helpers to our store\n  // to access them more easily\n  store.dispatch.gatsbyApi.setState({\n    helpers,\n    pluginOptions: filteredPluginOptions,\n  })\n\n  if (!hasDisplayedPreviewPresetMessage) {\n    const { activePluginOptionsPresets, helpers } = store.getState().gatsbyApi\n\n    if (activePluginOptionsPresets?.length) {\n      const previewOptimizationPreset = activePluginOptionsPresets.find(\n        ({ presetName }) => presetName === `PREVIEW_OPTIMIZATION`\n      )\n\n      if (previewOptimizationPreset) {\n        helpers.reporter.info(\n          formatLogMessage(\n            `\\nSince the \"Preview Optimization\" plugin option preset is enabled\\n${\n              !usingGatsbyV4OrGreater\n                ? `we aren't fetching more than ${previewOptimizationPreset.options.type.__all.limit} nodes of each type.\\nAdditionally, `\n                : ``\n            }Gatsby image and static file links in HTML fields are disabled.\\nIf you want to change this, please check the Preview docs for this plugin.\\nhttps://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-wordpress/docs/features/preview.md`\n          )\n        )\n      }\n    }\n\n    hasDisplayedPreviewPresetMessage = true\n  }\n}\n\nexport { setGatsbyApiToState }\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;AAEA,IAAIA,gCAAgC,GAAG,KAAvC;;AAEA,MAAMC,mBAAmB,GAAG,CAC1BC,OAD0B,EAE1BC,aAF0B,KAGjB;EACT,IAAID,OAAO,CAACE,OAAR,KAAqB,mCAAzB,EAA6D;IAC3D;EACD;;EAED,MAAMC,qBAAqB,GAAG,IAAAC,gEAAA,EAC5BJ,OAD4B,EAE5BC,aAF4B,CAA9B,CALS,CAUT;EACA;EACA;;EACAI,cAAA,CAAMC,QAAN,CAAeC,SAAf,CAAyBC,QAAzB,CAAkC;IAChCR,OADgC;IAEhCC,aAAa,EAAEE;EAFiB,CAAlC;;EAKA,IAAI,CAACL,gCAAL,EAAuC;IACrC,MAAM;MAAEW,0BAAF;MAA8BT;IAA9B,IAA0CK,cAAA,CAAMK,QAAN,GAAiBH,SAAjE;;IAEA,IAAIE,0BAAJ,aAAIA,0BAAJ,eAAIA,0BAA0B,CAAEE,MAAhC,EAAwC;MACtC,MAAMC,yBAAyB,GAAGH,0BAA0B,CAACI,IAA3B,CAChC,CAAC;QAAEC;MAAF,CAAD,KAAoBA,UAAU,KAAM,sBADJ,CAAlC;;MAIA,IAAIF,yBAAJ,EAA+B;QAC7BZ,OAAO,CAACe,QAAR,CAAiBC,IAAjB,CACE,IAAAC,kCAAA,EACG,uEACC,CAACC,qCAAD,GACK,gCAA+BN,yBAAyB,CAACO,OAA1B,CAAkCC,IAAlC,CAAuCC,KAAvC,CAA6CC,KAAM,sCADvF,GAEK,EACN,uPALH,CADF;MASD;IACF;;IAEDxB,gCAAgC,GAAG,IAAnC;EACD;AACF,CA5CD"}